<launch>

  <arg name="stair_length" default="0.3"/>

  <include file="$(find stairs_playground)/launch/playground.launch">
    <arg name="stair_length" value="$(eval arg('stair_length'))"/>
  </include>

  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />

  <param 
    name="robot_description" 
    command="$(find xacro)/xacro $(find wheelleg_description)/urdf/Segway.xacro" />

  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-param robot_description -urdf -model WheelLeg "/>

  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />

  <rosparam 
    file="$(find wheelleg_gazebo)/config/WheelLegSegway_control.yaml" 
    command="load"/>

  <node
    name   = "chassisGazeboInterface"
    pkg    = "wheelleg_gazebo"
    type   = "ChassisGazeboInterface.py"
    args   = "-n WheelLegSegway"
    output = "screen"/>

  <node
    name = "joystick"
    pkg  = "joy"
    type = "joy_node"/>

  <node 
    name="controller_spawner" 
    pkg="controller_manager" 
    type="spawner" 
    respawn="false"
    ns="/WheelLegSegway" 
    args="
      R_Joint_velocity_controller
      L_Joint_velocity_controller
      RRA_Joint_position_controller 
      RRB_Joint_position_controller 
      LRA_Joint_position_controller 
      LRB_Joint_position_controller 
      joint_state_controller"/>

    <node 
      name="controller_spawner_stopped" 
      pkg="controller_manager" 
      type="spawner" 
      respawn="false" 
      ns="/WheelLegSegway"
      args="--stopped  
      R_Joint_position_controller
      L_Joint_position_controller"/>

      <node
        name="controller"
        pkg ="wheelleg_segway_control"
        type="SmachTest.py"/>

      <remap from="/camera1/image_raw/compressed" to="/image_raw/compressed" />

</launch>